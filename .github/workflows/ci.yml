name: CI

# allow writing packages so we can push images to GHCR
permissions:
  contents: read
  packages: write

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.11']

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Show installed Python packages
        run: |
          python -m pip freeze

      - name: Run migrations
        run: |
          python manage.py migrate --noinput

      - name: Run backend tests (capture logs)
        run: |
          mkdir -p test-results
          # ensure we capture the real test exit code when piping to tee
          set -o pipefail
          python manage.py test core -v 2 2>&1 | tee test-results/backend-tests.log
          exit_code=${PIPESTATUS[0]}
          echo "backend tests exit code: $exit_code"
          exit $exit_code

      - name: Upload backend test logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: backend-test-logs
          path: test-results/backend-tests.log

  frontend-tests:
    runs-on: ubuntu-latest
    needs: []
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Cache npm
        uses: actions/cache@v4
        id: npm-cache
        with:
          path: |
            ~/.npm
            frontend/node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Install frontend dependencies
        working-directory: frontend
        run: |
          if [ -f package-lock.json ]; then npm ci; else npm install; fi

      - name: Run frontend tests
        working-directory: frontend
        run: |
          npm run test

      - name: Build frontend
        working-directory: frontend
        run: |
          npm run build

  publish-image:
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/finalsubmissionostad:${{ github.sha }}
            ghcr.io/${{ github.repository_owner }}/finalsubmissionostad:latest
